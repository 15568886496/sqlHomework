CREATE TABLE student
(
    id               int,
    name             varchar(255),
    surname          varchar(255),
    dob              date,
    primary_skill    varchar(255),
    created_datetime timestamp,
    updated_datetime timestamp,
    CONSTRAINT "student_pk" PRIMARY KEY (id)
);

CREATE TABLE phone
(
    id         int,
    student_id int,
    number     varchar(50),
    CONSTRAINT "phone_pk" PRIMARY KEY (id),
    CONSTRAINT phone_to_student_rel FOREIGN KEY (student_id)
        REFERENCES student(id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

CREATE TABLE subject
(
    id    int GENERATED BY DEFAULT AS IDENTITY,
    name  varchar(255),
    tutor varchar(255),
    CONSTRAINT "subject_pk" PRIMARY KEY (id)
);

CREATE TABLE exam_result
(
    id         int GENERATED BY DEFAULT AS IDENTITY,
    student_id int,
    subject_id int,
    mark       smallint,
    CONSTRAINT "exam_result_pk" PRIMARY KEY (id),
    CONSTRAINT result_to_student_rel FOREIGN KEY (student_id)
        REFERENCES student(id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT result_to_subject_rel FOREIGN KEY (subject_id)
        REFERENCES subject (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
);

INSERT INTO public.student
(id, "name", surname, dob, primary_skill, created_datetime, updated_datetime)
VALUES(1, 'kevin', 'kevin', NULL, 'python,java', NULL, NULL);
INSERT INTO public.student
(id, "name", surname, dob, primary_skill, created_datetime, updated_datetime)
VALUES(2, 'alex', 'alex', NULL, 'java', NULL, NULL);
INSERT INTO public.student
(id, "name", surname, dob, primary_skill, created_datetime, updated_datetime)
VALUES(3, 'frank', 'frank', NULL, 'php', NULL, NULL);

INSERT INTO public.subject
(id, "name", tutor)
VALUES(1, 'math', NULL);
INSERT INTO public.subject
(id, "name", tutor)
VALUES(2, 'biology', NULL);
INSERT INTO public.subject
(id, "name", tutor)
VALUES(3, 'chemistry', NULL);


INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(1, 1, 1, 1);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(2, 1, 2, 6);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(3, 1, 3, 9);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(4, 2, 1, 3);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(5, 2, 2, 5);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(6, 2, 3, 7);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(7, 3, 1, 7);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(8, 3, 2, 7);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(9, 3, 3, 7);
INSERT INTO public.exam_result
(id, student_id, subject_id, mark)
VALUES(10, 3, 1, 10);

-- task1
select student.primary_skill from student  where student.primary_skill is not null

-- task2
select * from student s where surname is null;

-- task3
select count(1), name from subject s 
inner join exam_result r
on s.id = r.subject_id 
where r.mark >= 6
group by name 
order by count(1) desc

-- task 4

select * from (select mark,student_id,count(1) num from exam_result er group by mark,student_id) table1 
where table1.num =(select count(1) from subject s)

-- task 5
select * from (select student_id, count(1) num from exam_result er where mark >6 group by student_id) table1 
where table1.num >= 2

-- task 6
select * from (select count(1) num,student_id,subject_id from exam_result er 
where mark >6 group by subject_id, student_id ) table1 where table1.num >= 2

-- task 7
select distinct  s2.name  from student s inner join exam_result er on s.id = er.student_id 
inner join subject s2 on s2.id = er.subject_id 
where er.mark >=6 and s.primary_skill in (select primary_skill from student)

-- task 8
select s.id,s.primary_skill  from student s inner join exam_result er on s.id = er .student_id 
where position (',' in primary_skill) > 0 group by s.id

-- task 9
select s.* from student s full outer join  exam_result er on s.id = er.student_id 
where s.id not in (select er.student_id  from exam_result er where er.mark >6)

-- task 10
select * from (select avg(mark) avgMark,student_id  from exam_result group by student_id) table1 
	where table1.avgMark > (select avg(mark) from exam_result)

-- task 11
select * from (select avg(mark) avgMark,student_id  from exam_result group by student_id) table1 
	where table1.avgMark > (select avg(mark) from exam_result)  order by table1.avgMark desc limit 5
	
-- task 12
select case max(mark)
when 1 then 'bad'
when 2 then 'bad'
when 3 then 'bad'
when 4 then 'AVERAGE'
when 5 then 'AVERAGE'
when 6 then 'AVERAGE'
when 7 then 'GOOD'
when 8 then 'GOOD'
when 9 then 'EXCELLENT'
when 10 then 'EXCELLENT'
end 
,student_id from exam_result er group by student_id

-- task 13
select count(1),table1.mark from  (select case mark
when 1 then 'bad'
when 2 then 'bad'
when 3 then 'bad'
when 4 then 'AVERAGE'
when 5 then 'AVERAGE'
when 6 then 'AVERAGE'
when 7 then 'GOOD'
when 8 then 'GOOD'
when 9 then 'EXCELLENT'
when 10 then 'EXCELLENT'
end mark
,student_id from exam_result er) table1 
group by table1.mark


